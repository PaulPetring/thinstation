#! /bin/bash

. $TS_GLOBAL
PID=$$

if [ -e /etc/$PACKAGE.functions ] ; then . /etc/$PACKAGE.functions ; fi
if [ ! -e /etc/cmd/$PACKAGE.wm ] ; then if [ -n "$WMNAME" ] ; then . /etc/$WMNAME.functions ;fi ;fi

pkg_set_init_flag $PACKAGE

if [ "$SERVER" == "." ] ; then SERVER="" ; fi
if [ "$OPTIONS" == "." ] ; then OPTIONS="" ; fi

# getfreescreen must be called before $PACKAGE.* because XNEST_NUMBER has to be defined before
if [ "$PACKAGE" = "xnest" ] ; then getfreescreen ; fi

if [ -e /etc/cmd/$PACKAGE.console ] ; then . /etc/cmd/$PACKAGE.console ; fi
if [ -e /etc/cmd/$PACKAGE.window ] ; then . /etc/cmd/$PACKAGE.window ; fi
if [ -e /etc/cmd/$PACKAGE.menu ] ; then . /etc/cmd/$PACKAGE.menu ; fi
if [ -e /etc/cmd/$PACKAGE.fullscreen ] ; then . /etc/cmd/$PACKAGE.fullscreen ; fi
if [ -e /etc/cmd/$PACKAGE.global ] ; then . /etc/cmd/$PACKAGE.global ; fi

if [ -e /etc/cmd/$PACKAGE.extra ] ; then . /etc/cmd/$PACKAGE.extra ; fi

if [ -z "$CMD_CONSOLE" ] ; then CMD_CONSOLE=$CMD_GLOBAL ; fi
if [ -z "$CMD_WINDOW" ] ; then CMD_WINDOW=$CMD_GLOBAL ; fi
if [ -z "$CMD_MENU" ] ; then CMD_MENU=$CMD_GLOBAL ; fi
if [ -z "$CMD_FULLSCREEN" ] ; then CMD_FULLSCREEN=$CMD_GLOBAL ; fi

if [ -e /etc/cmd/$PACKAGE.getip ] ; then CMD_GETIP=TRUE; fi

if [ -n "$2" ] ; then SERVER="$2" ; fi
if [ -n "$3" ] ; then OPTIONS="$3" ; fi
if [ -e /etc/cmd/$PACKAGE.server_first ] ; then	REVERSE_ORDER=TRUE ; fi

APPLOG=$APPLOGDIR/$PACKAGE.$$
export APPLOG

gen_menu()
{
	if [ -e /etc/cmd/$PACKAGE.wm ] && [ -e /etc/$PACKAGE.functions ] && x_wm ; then
		make_res_list
		. /etc/splash.functions
		wm_menu
	fi
}

x_get_ip()
{
	if is_enabled $CMD_GETIP; then
	    if  is_enabled $ALWAYS_ENTER_SERVER || [ -z "$SERVER" ]; then
		dialog_get_server_address $PACKAGE
	    fi
	fi
}

x_get_user()
{
	if [ -e /etc/cmd/$PACKAGE.getuser ] && [ -z "$REMUSER" ]; then
	    dialog_get_username $PACKAGE
	fi
}

package_input()
{
	if [ -e /etc/cmd/$PACKAGE.options ]; then
		. /etc/cmd/$PACKAGE.options
	else
		x_get_ip
		x_get_user
	fi
}

order_command()
{

	if is_enabled $REVERSE_ORDER ; then
		ORDERED_COMMAND="$SERVER $OPTIONS"
	else
		ORDERED_COMMAND="$OPTIONS $SERVER"
	fi
	if [ -e /etc/cmd/$PACKAGE.getuser ]; then
		ORDERED_COMMAND="$REMUSER $ORDERED_COMMAND"
	fi
}

ck_wrapper()
{
	if [ -x /bin/ck-launch-session ]; then
		CMD="ck-launch-session $CMD"
	fi
}

xterm_wrapper()
{
	if [ -e /etc/console/$PACKAGE ]; then
		if [ "`basename $XTERM_CMD`" == "xfce4-terminal" ]; then
			arg="--disable-server -x"
		else
			arg="-e"
		fi
		CMD="$XTERM_CMD $arg $CMD"
	elif x_wm && [ "$CMD_CONSOLE" == "$XTERM_CMD" ]; then
		#Rewrite the Xterm CMD to fullscreen like a WM would.
		if ! echo $CMD |grep -qe "-geometry"; then
			CMD="$CMD_CONSOLE -geometry `get_res` $ORDERED_COMMAND"
		fi
	fi
}

eula_()
{
	if [ -e /bin/eula_startup ]; then
		/bin/eula_startup
	fi
}

run_command()
{
	if is_enabled $LOG_COMMANDS && [ -z $PASSWORD ]; then
		echo "$CMD" >> $APPLOG
	fi
	$CMD >> $APPLOG 2>&1
	STATUS=$?
	unset PASSWORD CMD
	if x_wm ;then
		chvt 4
		exit $STATUS
	fi
}

x_check_status()
{
	if [ $STATUS != 0 ] && [ ! -e /etc/console/$PACKAGE ]; then
		Xdialog --title $PACKAGE \
			--ok-label "View Log" \
			--cancel-label "OK" \
			--icon /lib/pixmaps/${PACKAGE}_32x32.xpm \
			--yesno "Application $PACKAGE failed with an error ($STATUS)\nWould you like to review the command output log?" 10 80

		if [ $? == 0 ]; then
			Xdialog --title $PACKAGE \
				--ok-label "Done" \
				--no-cancel \
				--logbox $APPLOG 40 100
		fi
	fi
}

case "$1" in
auto)
  while [ "$reconnect" != "1" ]; do
    echo "Running Auto $PACKAGE" >> $APPLOG
    package_input
    order_command
    CMD="$CMD_CONSOLE $ORDERED_COMMAND"
    wm_workspaces "$CMD" "$4"
    xterm_wrapper
    run_command
    wait
        check_NX
        check_reboot
    check_reconnect
  done
    $NO_SESSION
    ;;
console)
    echo "Running Console $PACKAGE" >> $APPLOG
    gen_menu
    free_memory
    x_auth_file
    x_mouse
    x_mod_map
    x_numlock
    use_xrandr
    use_wallpaper
    while [ -e /tmp/.X11-unix/X$DISPLAY_NUMBER ] && [ "$reconnect" != "1" ]; do
	package_input
	order_command
	CMD="$CMD_CONSOLE $ORDERED_COMMAND"
	xterm_wrapper
	ck_wrapper
	splash_exit
	eula_
        run_command
	wait
	check_NX
	check_xrunning
	check_reboot
	check_reconnect
    done
    $NO_SESSION
    ;;
window|fullscreen)
    echo "Running $1 $PACKAGE" >> $APPLOG
    ALLOW_EXIT=TRUE
    if ! is_disabled $ALWAYS_ENTER_SERVER ; then
	ALWAYS_ENTER_SERVER=TRUE
    fi
    if ! is_disabled $ALLOW_SERVER_EDITS ; then
	ALLOW_SERVER_EDITS=TRUE
    fi
    package_input
    order_command
    MODE=`make_caps "$1"`
    CMD="`eval echo '$'CMD_$MODE '$'ORDERED_COMMAND`"
    xterm_wrapper
    run_command
    x_check_status
    ;;
help)
    echo "Usage: $0 {console|menu|window|fullscreen} [server] [options]"
    ;;
  *)
    exit 1
    ;;
esac

exit 0
