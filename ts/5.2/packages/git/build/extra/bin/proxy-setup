#!/bin/bash

configure=$1

pretty_box()
{
        COUNT=10
        (while test $COUNT != 110 ; do
        echo $COUNT
        COUNT=`expr $COUNT + 1`
        sleep 1
        done
        ) |
        Xdialog --title "Testing Connection" --progress "Checking Internet Connectivity" 10 60 0 &
        prettybox=$!
}

test_internet()
{
        pretty_box
        if ! wget -t 2 -T 5 http://www.doncuppjr.net/index.php ; then
                http="Fail!"
        else
                http="Success!"
                rm index.php
        fi
        if ! git clone git://thinstation.git.sourceforge.net/gitroot/thinstation/test ; then
                git="Fail!"
        else
                git="Success!"
                rm -rf test
        fi
        if [ "$http" == "Fail!" -o "$git" == "Fail!" ] ; then
                internet="Fail!"
        else
                internet="Success!"
        fi
        kill -KILL $prettybox
}

proxy_dialog()
{
	if [ -e /tmp/.dialog_proxy_server ] ; then
		PROXY_SERVER=$(cat /tmp/.dialog_proxy_server)
	else
		touch /tmp/.dialog_proxy_server
		PROXY_SERVER="type server name here"
	fi
	if [ -e /tmp/.dialog_proxy_port ] ; then
		PROXY_PORT=$(cat /tmp/.dialog_proxy_port)
	else
		touch /tmp/.dialog_proxy_port
		PROXY_PORT=3128
	fi
	if [ -e /tmp/.dialog_proxy_auth ] ; then
		PROXY_AUTH=$(cat /tmp/.dialog_proxy_auth)
	else
		touch /tmp/.dialog_proxy_auth
		PROXY_AUTH="username:password"
	fi

	# Now to business:
	DIALOG_RESPONSE=`Xdialog --stdout --title "Proxy Setup" --left --3inputsbox "Please tell me about your proxy." \
        	        18 55 "Server name or IP number - No Protocol" "$PROXY_SERVER" "Port" "$PROXY_PORT" "Authorization" "$PROXY_AUTH"` \
			2>>/logfile
	exit_status=$?

	if [ "$exit_status" -lt "1" ] && [ ! -z "$DIALOG_RESPONSE" ] ; then
    		PROXY_SERVER=`echo "$DIALOG_RESPONSE" |cut -d "/" -f1`
    		PROXY_PORT=`echo "$DIALOG_RESPONSE" |cut -d "/" -f2`
    		PROXY_AUTH=`echo "$DIALOG_RESPONSE" |cut -d "/" -f3`

    		# preserve settings
    		echo "$PROXY_SERVER" > /tmp/.dialog_proxy_server
    		echo "$PROXY_PORT" > /tmp/.dialog_proxy_port
    		echo "$PROXY_AUTH" > /tmp/.dialog_proxy_auth

		if [ "$PROXY_SERVER" == "type server name here" ]; then
			PROXY_SERVER=""
			PROXY_PORT=""
		fi
		if [ "$PROXY_AUTH" == "username:password" ]; then
			PROXY_AUTH=""
		fi
	else
    		PROXY_SERVER=""
		PROXY_PORT=""
		PROXY_AUTH=""
	fi
}

get_existing()
{
	if [ -e ~/.proxy ] ; then
		. ~/.proxy
	fi
	if [ -e /tmp/.proxy ] ; then
		. /tmp/.proxy
	fi
}

set_proxy()
{
	echo "internet=$internet" > ~/.proxy
	echo "http=$http" >> ~/.proxy
	echo "git=$git" >> ~/.proxy
	echo "PROXY_SERVER=$PROXY_SERVER" >> ~/.proxy
	echo "PROXY_PORT=$PROXY_PORT" >> ~/.proxy
	echo "PROXY_AUTH=$PROXY_AUTH" >> ~/.proxy
	echo "PROXY_HTTP=$PROXY_HTTP" >> ~/.proxy
	echo "PROXY_GIT=$PROXY_GIT" >> ~/.proxy
	cp ~/.proxy /tmp/.proxy
	if [ ! -z "$PROXY_SERVER" ] && [ ! -z "$PROXY_PORT" ] ; then
		if [ "$PROXY_HTTP" == "TRUE" ] ; then
			if [ -z $PROXY_AUTH ] ; then
				echo "http_proxy=http://$PROXY_SERVER:$PROXY_PORT" > ~/.wgetrc
			else
				echo "http_proxy=http://${PROXY_AUTH}@$PROXY_SERVER:$PROXY_PORT" > ~/.wgetrc
			fi
		fi
		if [ "$PROXY_GIT" == "TRUE" ] ; then
			git config --global core.gitproxy gitproxy
		fi
	fi
}

get_proxy()
{
       	Xdialog --title "Setup Proxy" --yesno "\
Internet Connectivity Test Failed! \n\
\n\
    HTTP: $http  GIT: $git \n\
\n\
 Would you like to setup a Proxy?" 15 50
       	retval=$?
	unset exit_status
       	if [ "$retval" -lt "1" ] ; then
		while [ -z $PROXY_SERVER -o -z $PROXY_PORT ] || [ "$exit_status" != "0" ] ; do
			proxy_dialog
			set_proxy
		done
	fi
	return $retval
}

unset_http()
{
	unset http
	unset PROXY_HTTP
	if [ -e ~/.wgetrc ] ; then
        	rm ~/.wgetrc
	fi
}

unset_git()
{
	unset PROXY_GIT
	git config --global --unset core.gitproxy
}

get_existing
if [ "$configure" == "setup" ] ; then
	unset internet
	unset git
	unset_git
	unset http
	unset_http
fi
if [ "$internet" != "Success!" ] ; then
	test_internet
	if [ "$internet" == "Fail!" ] ; then
		if [ -z $PROXY_HTTP ] ; then
			if [ "$http" == "Success!" ] ; then
				PROXY_HTTP=FALSE
			else
				PROXY_HTTP=TRUE
			fi
		fi
		if [ -z $PROXY_GIT ] ; then
			if [ "$git" == "Success!" ] ; then
				PROXY_GIT=FALSE
			else
				PROXY_GIT=TRUE
			fi
		fi
		if get_proxy ; then
			test_internet
			if [ "$PROXY_HTTP" == "TRUE" ] && [ "$http" == "Fail!" ] ; then
				unset_http
			fi
			if [ "$PROXY_GIT" == "TRUE" ] && [ "$git" == "Fail!" ] ; then
				unset_git
			fi
		fi
	fi
	if [ "$internet" == "Fail!" ] ; then
		exit 1
	fi
fi

set_proxy

exit 0
