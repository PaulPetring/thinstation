#!/bin/bash
tempdir=`mktemp -d 2>/dev/null`
. /etc/thinstation.defaults

x_echo()
{
	Xdialog	--title "$1" \
		--stdout \
		--msgbox "$2" 18 60 \
			> /dev/null
}

readme()
{
	Xdialog	--title "Install to HD" \
		--textbox /README 30 120
			if [ $? -lt 1 ]; then
				continue
			else
				exit 1
			fi
}

mem_check()
{
	MEM=`cat /proc/meminfo |grep -e MemTotal |cut -d: -f2 |sed -r 's/[[:space:]]+/:/g' |cut -d: -f2`
	if [ "$MEM" -lt "2048000" ]; then
		x_echo "Low Memmory" "You will need at least 2gb of RAM\n\
 to use the DevStation."
		exit 1
	fi
}

timezone_locale()
{
	OLDIFS=$IFS
	IFS=$'\t\n'
	option=`cat /lib/indexed-zone.tab`
	Xdialog	--no-tags \
		--stdout \
		--title "Time Zone" \
		--menu "Please Choose Your Time Zone" 20 40 4 ${option} \
			> $tempdir/timezone
			if [ $? -gt 0 ]; then
				exit 1
			fi
			TIME_ZONE=`cat $tempdir/timezone`

	option=`cat /lib/indexed-locale.tab`
	Xdialog	--no-tags \
		--rc-file=/etc/gtk-2.0/gtkrc.mono \
		--title "Locale" \
		--stdout \
		--menu "Localization / Keyboard Map" 20 40 4 ${option} \
			> $tempdir/locale
			if [ $? -gt 0 ]; then
				exit 1
			fi
		LOCALE=`cat $tempdir/locale`

	IFS=$OLDIFS
	TIME_ZONE=`cat /lib/indexed-zone.tab |grep -E ^$TIME_ZONE[[:space:]]+ |cut -f2`
	LOCALE=`cat /lib/indexed-locale.tab |grep -E ^$LOCALE[[:space:]]+ |cut -f2 |cut -d " " -f1`
}

set_res()
{
	index=0
	if [ -e /sys/devices/platform/uvesafb.0/vbe_modes ]; then
		for i in `cat /sys/devices/platform/uvesafb.0/vbe_modes |cut -d "-" -f1 |sort -n |uniq`; do
        		res[$index]=$i
        		echo "$index $i" >> /$tempdir/reslist
        		let index=index+1
		done
	else
		for i in `xrandr 2>/dev/null |grep -o -r -e '   [0-9]*x[0-9]*' |sed -r 's/ //g' |sort -u -t'x' -k1n -k2n`; do
			res[$index]=$i
                	echo "$index $i" >> /$tempdir/reslist
                	let index=index+1
		done
	fi
	list=`cat $tempdir/reslist`
	Xdialog	--title "Resolution" \
		--no-label \
		--no-tags \
		--stdout \
		--menu "What is your prefered\n screen resolution?" 20 40 4 $list \
			> $tempdir/reschoice
			if [ $? -lt 1 ]; then
				index=`cat $tempdir/reschoice`
				res="video=uvesafb:"${res[$index]}"-32,mtrr:0,ywrap"
				SCREEN_RESOLUTION=${res[$index]}
			else
				exit 1
			fi
}

disk_setup()
{
	index=0
	for i in `blockdev --report |sed -r 's/[[:space:]]+/:/g' |cut -d ":" -f7 |grep -e / |grep -v [0-9]`; do
		disksize[$index]=`blockdev --report |sed -r 's/[[:space:]]+/:/g' | grep -e $i\$ |cut -d ":" -f6`
		disk[$index]=$i
		if [ "${disksize[$index]}" -gt "20000000000" ]; then
			diskentry="${disk[$index]}:${disksize[$index]}"
			echo "$index $diskentry" >> $tempdir/available.$$
		fi
		let index=index+1
	done
	list=`cat $tempdir/available.$$`
	if [ "$[index]" == "1" ] && [ "$list" != "" ]; then
		index=0
	elif [ "$list" != "" ]; then
		Xdialog	--title "Select Disk" \
			--no-label \
			--stdout \
			--no-tags \
			--menu "Which disk would you like to use?" 20 40 4 $list \
				> $tempdir/sldisk.$$
				if [ $? -lt 1 ]; then
					index=`cat $tempdir/sldisk.$$ |cut -d " " -f1`
				else
					exit 1
				fi
	else
		x_echo '"No usable disk"' '"ThinStation Dev requirees a disk at least 20GB in size. Exiting"'
		exit 1
	fi

	disk=${disk[$index]}
	x_echo "Selected Disk" "Using disk $disk"
#	Xdialog	--title "Buggy Bios" \
#		--no-tags \
#		--stdout \
#		--checklist "Do you have a buggy bios that requires the\n start of the partition to be at sector 1\n instead of the default sector of 2048?" \
#			0 0 2 1 "Enable Buggy Bios Support" off \
#			> $tempdir/buggy
#			if [ $? -lt 1 ]; then
#				if [ "`cat $tempdir/buggy`" == "1" ]; then
#					buggybios=true
#				else
#					buggybios=false
#				fi
#			else
#				exit 1
#			fi
}

install_it()
{
	Xdialog	--title "Warning" \
		--default-no \
		--stdout \
		--yesno "All Data on the selected disk is about to be erased.\n Do you Wish to continue?" 10 60
			if [ $? -gt 0 ]; then
				exit 1
			fi
	Xdialog	--title "Warning" \
		--stdout \
		--default-no \
		--yesno "Are you really sure?" 10 50
			if [ $? -gt 0 ]; then
        			exit l
			else
				$XTERM_CMD -T "Installing" $ARG /bin/install.sh $disk #$buggybios
			fi
}

readme
mem_check

if proxy-setup ; then
	continue
else
	x_echo "Broken Internet" "No Internet Connectivity. Exiting."
	exit $?
fi
disk_setup
set_res
timezone_locale
if [ "`basename $XTERM_CMD`" == "Terminal" ]; then
        ARG="-x"
else
        ARG="-e"
fi
install_it

echo "LOCALE=$LOCALE" > /root/thinstation.conf.user
echo "TIME_ZONE=$TIME_ZONE" >> /root/thinstation.conf.user
echo "SCREEN_RESOLUTION=$SCREEN_RESOLUTION" >> /root/thinstation.conf.user
echo -e '#AUDIO_LEVEL=90
#MIC_LEVEL=80
#X_DPI=100
#USE_XRANDR=FALSE
#XRANDR_OPTIONS="-s 1920x1080 --output DVI2 --right-of DVI1"
#X_DRIVER_OPTION1="HWcursor False"
#X_DRIVER_OPTION2="PanelSize 1024x600"
#SCREEN_BLANK_TIME=0
#SCREEN_STANDBY_TIME=0
#SCREEN_SUSPEND_TIME=0
#SCREEN_OFF_TIME=0
#SCREEN_HORIZSYNC="30-64 | *"
#SCREEN_VERTREFRESH="56-87 | 60 | 56 | 70 | 72 | 75"
#NET_USE=WLAN
#NET_USE_DHCP=off
#NET_IP_ADDRESS=192.168.0.1
#NET_MASK=255.255.255.0
#NET_GATEWAY=192.168.0.1
#NET_DNS1=192.168.0.2
#NET_DNS2=192.168.0.3
#NET_DNS_SEARCH=cartoons.org.nz
NET_HOSTNAME=DevStation_*
#NET_TELNETD_ENABLED=OFF
#WIRELESS_ESSID="Example"
#WIRELESS_MODE="managed"
#WIRELESS_WPAKEY="3x@mpl39@559hr@53"
#WIRELESS_DRIVER="wext"' >> /root/thinstation.conf.user

for object in `ls -A /root`; do
	cp -Prfd /root/$object /tmp-root/.
done
cat /boot/syslinux.tpl |sed -e "s/\$RES/$res/g" > /boot/syslinux.cfg

flag=0
for check in /boot/vmlinuz /thinstation/setup-chroot ; do
	if [ -e $check ] ; then
		let flag=flag+1
	fi
done
if [ "$flag" != "2" ]; then
	x_echo "Fail" "Something must have gone wrong\n\
 with the installation"
	exit 1
fi

x_echo "Almost Done" "\
You can now make your first image by going to\n\
/thinstation and running ./setup-chroot from\n\
there cd to /ts/$TS_VERSION and run ./build"
x_echo "PXE Booting" "\
This dev workstation is a PXE boot server.\n\
You can set it's IP as the next boot server\n\
in your DHCP server, and set the boot file to\n\
pxelinux.0 . This will let clients boot directly\n\
from images created in the build env of this\n\
workstation."
x_echo "Alldone" "\
Your system is now bootable with the\n\
TS dev environment, but the password is\n\
guessable. Please reboot and if everything\n\
is ok, Tweak your DevStation and disable\n\
the telnet serice."

exit 0

